name: Sync KV secrets to repository secrets

on:
  workflow_call:
    inputs:
      env:
        description: 'Environment'
        required: true
        type: string
      terraform_version:
        description: 'Terraform version'
        required: true
        type: string
      runs-on: 
        description: 'Runs on'
        required: true
        type: string

    secrets:
      gh-pat:
        description: 'GitHub PAT'
        required: true
      tenant-id:
        description: 'Tenant ID'
        required: true
      subscription-id:
        description: 'Subscription ID'
        required: true
      client-id:
        description: 'Client ID'
        required: true
      client-secret:
        description: 'Client Secret'
        required: true
      kv-repository-secrets:
        description: 'Key Vault Repository Secrets'
        required: true
      kv-repository-secrets-rg-name:
        description: 'Key Vault Repository Secrets Resource Group Name'
        required: true
      terraform-resource-group:
        description: 'Terraform Resource Group'
        required: true
      terraform-storage-account-name:
        description: 'Terraform Storage Account Name'
        required: true
      terraform-container-name:
        description: 'Terraform Container Name'
        required: true
      terraform-backend-key:
        description: 'Terraform Backend Key Sync Secrets'
        required: true
        
jobs:
  sync:
    name: Sync KV secrets to repository secrets
    runs-on: ${{ inputs.runs-on }}
    environment: ${{ inputs.env }}
    steps:
    - run: echo "Deploying to ${{ inputs.env }}"

    - name: checkout
      uses: actions/checkout@v2

    - name: install terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ inputs.terraform_version }}
        
    - name: az cli login
      uses: azure/login@v1
      with:
        creds: '{"tenantId": "${{ secrets.tenant-id }}", "subscriptionId": "${{ secrets.subscription-id }}", "clientId": "${{ secrets.client-id }}", "clientSecret": "${{ secrets.client-secret }}"}'
        enable-AzPSSession: true

    - name: terraform arm credentials
      shell: bash
      run: |
        echo ARM_CLIENT_ID="${{ secrets.client-id }}" >> "$GITHUB_ENV"
        echo ARM_CLIENT_SECRET="${{ secrets.client-secret }}" >> "$GITHUB_ENV"
        echo ARM_TENANT_ID="${{ secrets.tenant-id }}" >> "$GITHUB_ENV"
        echo ARM_SUBSCRIPTION_ID="${{ secrets.subscription-id }}" >> "$GITHUB_ENV"

    - name: pull secret names
      shell: bash
      run: |
        SECRETS=$(pwsh -command 'az keyvault secret list --vault-name ${{ secrets.kv-repository-secrets }} | convertfrom-json | ? { $_.name.StartsWith("${{ github.repository }}".Split("/")[1]) } | % { $output += $_.name + " " }; $output.Trim()')
        echo "SECRETS=$SECRETS" >> "$GITHUB_ENV"

    - name: terraform init
      shell: bash
      run: |
        terraform -chdir=$GITHUB_WORKSPACE/terraform/kv-to-repo-secrets/res init \
                  -reconfigure \
                  -backend-config=resource_group_name=${{ secrets.terraform-resource-group }} \
                  -backend-config=storage_account_name=${{ secrets.terraform-storage-account-name }} \
                  -backend-config=container_name=${{ secrets.terraform-container-name }} \
                  -backend-config=key=${{ secrets.terraform-backend-key }}

    - name: terraform destroy current secrets
      shell: bash
      run: |
        terraform -chdir=$GITHUB_WORKSPACE/terraform/kv-to-repo-secrets/res destroy \
                  --auto-approve \
                  -var azurerm_tenant-id=${{ secrets.tenant-id }} \
                  -var azurerm_client-id=${{ secrets.client-id }} \
                  -var azurerm_client-secret=${{ secrets.client-secret }} \
                  -var azurerm_subscription-id=${{ secrets.subscription-id }} \
                  -var kv_name=${{ secrets.kv-repository-secrets }} \
                  -var kv_resource_group_name=${{ secrets.kv-repository-secrets-rg-name }} \
                  -var kv_secrets="$SECRETS" \
                  -var github_token=${{ secrets.gh-pat }} \
                  -var github_owner=${{ github.repository_owner }} \
                  -var github_repository_name="${{ github.repository }}" \
                  -var github_repository_environment=${{ secrets.env }}

    - name: terraform apply new secrets
      shell: bash
      run: |
        terraform -chdir=$GITHUB_WORKSPACE/terraform/kv-to-repo-secrets/res apply \
                  --auto-approve \
                  -var azurerm_tenant-id=${{ secrets.tenant-id }} \
                  -var azurerm_client-id=${{ secrets.client-id }} \
                  -var azurerm_client-secret=${{ secrets.client-secret }} \
                  -var azurerm_subscription-id=${{ secrets.subscription-id }} \
                  -var kv_name=${{ secrets.kv-repository-secrets }} \
                  -var kv_resource_group_name=${{ secrets.kv-repository-secrets-rg-name }} \
                  -var kv_secrets="$SECRETS" \
                  -var github_token=${{ secrets.gh-pat }} \
                  -var github_owner=${{ github.repository_owner }} \
                  -var github_repository_name="${{ github.repository }}" \
                  -var github_repository_environment=${{ secrets.env }}

    - name: az cli Logout
      run: |
        az logout
        az cache purge
        az account clear
